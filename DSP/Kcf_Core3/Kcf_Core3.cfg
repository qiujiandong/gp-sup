var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Cache = xdc.useModule('ti.sysbios.family.c66.Cache');
var SharedRegion = xdc.useModule('ti.sdo.ipc.SharedRegion');
var Ipc = xdc.useModule('ti.sdo.ipc.Ipc');
var MultiProc = xdc.useModule('ti.sdo.utils.MultiProc');
var Notify = xdc.useModule('ti.sdo.ipc.Notify');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var MessageQ = xdc.useModule('ti.sdo.ipc.MessageQ');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Error = xdc.useModule('xdc.runtime.Error');
var ti_sysbios_family_c64p_Hwi = xdc.useModule('ti.sysbios.family.c64p.Hwi');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var CpIntc = xdc.useModule('ti.sysbios.family.c66.tci66xx.CpIntc');

Program.sectMap[".initial"] = new Program.SectionSpec();
Program.sectMap[".initial"].loadSegment = "L2SRAM";
Program.sectMap[".sysmem"] = new Program.SectionSpec();
Program.sectMap[".sysmem"].loadSegment = "MSMC";
Program.sectMap[".images"] = new Program.SectionSpec();
Program.sectMap[".images"].loadSegment = "DDR3";

Ipc.procSync = Ipc.ProcSync_ALL;

SharedRegion.numEntries = 4;
SharedRegion.translate = false;

/* Shared Memory base address and length */
var SMSMC_BASE = 0x0C000000;
var SMSMC_SIZE = 0x00080000;
var SDDR3_BASE = 0x80000000;
var SDDR3_SIZE = 0x40000000;

SharedRegion.setEntryMeta(0,
    { base: SMSMC_BASE, 
      len:  SMSMC_SIZE,
      ownerProcId: 0,
      isValid: true,
      cacheEnable: true,
      cacheLineSize: 64,
      createHeap: true,
      name: "MSMC_SHARED",
    });

SharedRegion.setEntryMeta(1,
    { base: SDDR3_BASE, 
      len:  SDDR3_SIZE,
      ownerProcId: 0,
      isValid: true,
      cacheEnable: true,
      cacheLineSize: 128,
      createHeap: true,
      name: "DDR3_SHARED",
    });

MultiProc.baseIdOfCluster = 0;
MultiProc.numProcessors = 4;
MultiProc.setConfig("CORE3", ["CORE0", "CORE1", "CORE2", "CORE3"]);

var task1Params = new Task.Params();
task1Params.instance.name = "hFFTTsk";
task1Params.priority = 2;
Program.global.hFFTTask = Task.create("&FFTTskFxn", task1Params);

BIOS.heapSection = ".sysmem";
BIOS.heapSize = 128000;

System.SupportProxy = xdc.module("xdc.runtime.SysStd");
System.extendedFormats = "%$S%f";

var semaphore1Params = new Semaphore.Params();
semaphore1Params.instance.name = "hFFTHwiSem";
semaphore1Params.mode = Semaphore.Mode_BINARY;
Program.global.hFFTHwiSem = Semaphore.create(null, semaphore1Params);
